# Build stage
FROM golang:tip-alpine AS builder

WORKDIR /app

# Copy the rest of the application code
COPY web .

# Initialize Go modules
RUN go mod init app

# Force regenerate go.sum and download dependencies
RUN go mod tidy && go mod download

# Build the Go binary
RUN CGO_ENABLED=0 go build -o app .

# Final stage
FROM alpine:3.22.0

# Create a non-root user with default UID/GID (will be overridden in entrypoint.sh)
RUN addgroup -g 1000 mygroup && \
    adduser -D -u 1000 -G mygroup myuser

WORKDIR /app

# Copy the compiled binary from the builder stage
COPY --from=builder /app/app .

# Copy static assets (CSS, JS, HTML templates)
COPY web/static /app/static
COPY web/templates /app/templates

# Copy entrypoint script
COPY web/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Expose the application port
EXPOSE 5000

# Set the entrypoint
ENTRYPOINT ["/entrypoint.sh"]

# Run the application as myuser
CMD ["./app"]
